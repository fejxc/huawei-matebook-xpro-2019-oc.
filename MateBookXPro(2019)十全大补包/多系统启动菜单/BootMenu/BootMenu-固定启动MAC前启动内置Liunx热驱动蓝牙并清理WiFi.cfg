insmod all_video
insmod video_bochs
insmod video_cirrus
insmod gfxterm
insmod gfxmenu
insmod gettext
insmod jpeg
insmod png
insmod test
insmod efi_gop
insmod efi_uga
insmod font
insmod gfxterm

set display=1280x1024  #兼容1920x1080
#set display=2560x1440 #兼容2160x1440
set display=3840x2160 #兼容3000x2000

set timeout=3
set boot_minilinux=n
export boot_minilinux

if [ -f $prefix/grubenv ]; then
  load_env
fi

if test x"${pre_is_winboot}" = xy ; then
    set pre_is_winboot=n
    save_env pre_is_winboot
    set boot_minilinux=y
    export boot_minilinux
else
    if test x"${pre_is_nimilinux}" = xy ; then
       set timeout=0
    fi
fi


set menu_color_normal=white/black
set menu_color_highlight=black/light-gray


if test x"${display}" = x1280x1024 ; then
    set gfxmode=1920x1080,1280x1024,auto
    export gfxmode
    if terminal_output gfxterm; then
        loadfont ($root)/EFI/BootMenu/themes/laozhiang/simsunb20.pf2
        loadfont ($root)/EFI/BootMenu/themes/laozhiang/msyh24.pf2
        set theme=($root)/EFI/BootMenu/themes/laozhiang/theme-1280x1024.txt
        export theme
    fi
fi

if test x"${display}" = x2560x1440 ; then
    set gfxmode=2560x1440,2160x1440,auto
    export gfxmode
    if terminal_output gfxterm; then
        loadfont ($root)/EFI/BootMenu/themes/laozhiang/simsunb32.pf2
        loadfont ($root)/EFI/BootMenu/themes/laozhiang/msyh36.pf2
        set theme=($root)/EFI/BootMenu/themes/laozhiang/theme-2560x1440.txt
        export theme
    fi
fi


if test x"${display}" = x3840x2160 ; then
    set gfxmode=3840x2160,3000x2000,auto
    export gfxmode
    if terminal_output gfxterm; then
        loadfont ($root)/EFI/BootMenu/themes/laozhiang/simsunb48.pf2
        loadfont ($root)/EFI/BootMenu/themes/laozhiang/msyh54.pf2
        set theme=($root)/EFI/BootMenu/themes/laozhiang/theme-3840x2160.txt
        export theme
    fi
fi

# OpenCore启动Mac OS X
if test -f "/EFI/OC/OpenCore_macos1.efi"; then
    menuentry 'Mac OS (itlwm原生WiFi)' --class macosx {
        default="${chosen}"
        save_env default        
        if test x"${pre_is_nimilinux}" = xn ; then
            set pre_is_nimilinux=y
            save_env pre_is_nimilinux
            linux /EFI/BootMenu/Bluetooth/ibtinit
        else
            set pre_is_nimilinux=n
            save_env pre_is_nimilinux
            chainloader /EFI/OC/OpenCore_macos1.efi
        fi
    }
fi

# OpenCore启动Mac OS X
if test -f "/EFI/OC/OpenCore_macos2.efi"; then
    menuentry 'Mac OS (itlwm以太网接口)' --class macosx {
        default="${chosen}"
        save_env default        
        if test x"${boot_minilinux}" = xy ; then
            set pre_is_nimilinux=y
            save_env pre_is_nimilinux
            linux /EFI/BootMenu/Bluetooth/ibtinit
        else
            set pre_is_nimilinux=n
            save_env pre_is_nimilinux
            chainloader /EFI/OC/OpenCore_macos2.efi
        fi
    }
fi
# OpenCore启动Mac OS X
if test -f "/EFI/OC/OpenCore_macos3.efi"; then
    menuentry 'Mac OS (AppleIntelWiFi驱动)' --class macosx {
        default="${chosen}"
        save_env default        
        if test x"${boot_minilinux}" = xy ; then
            set pre_is_nimilinux=y
            save_env pre_is_nimilinux
            linux /EFI/BootMenu/Bluetooth/ibtinit
        else
            set pre_is_nimilinux=n
            save_env pre_is_nimilinux
            chainloader /EFI/OC/OpenCore_macos3.efi
        fi
    }
fi

# Windows10
if test -f "/EFI/Microsoft/Boot/bootmgfw.efi"  ; then
    menuentry 'Windows 10' --class windows {
        insmod part_gpt
        insmod fat
        default="${chosen}"
        save_env default
        chainloader /EFI/Microsoft/Boot/bootmgfw.efi
}
fi

#Ubuntu
#menuentry 'Ubuntu 20.04' --class ubuntu {
#    default="${chosen}"
#    save_env default
#    search --no-floppy --fs-uuid --set=root d2d58f9f-6b3d-481b-9626-cd34db98e09a
#    linux	/boot/vmlinuz-5.4.0-26-generic root=UUID=d2d58f9f-6b3d-481b-9626-cd34db98e09a ro  quiet splash $vt_handoff
#    initrd	/boot/initrd.img-5.4.0-26-generic
#}

submenu '工具 （MAC安装, WinPE, Linux Live等）'{
    if test -f "/EFI/OC/OpenCore.efi"; then
        menuentry '使用OpenCore启动Mac OS X(启动菜单,安装,Recovery)' --class macosx {
            default="${chosen}"
            save_env default        
            if test x"${pre_is_nimilinux}" = xn ; then
                set pre_is_nimilinux=y
                save_env pre_is_nimilinux
                linux /EFI/BootMenu/Bluetooth/ibtinit
            else
                set pre_is_nimilinux=n
                save_env pre_is_nimilinux
                chainloader /EFI/OC/OpenCore.efi
            fi
        }
    fi
	
    if test -f "/EFI/OC/OpenCore_Debug.efi"; then
        menuentry '使用OpenCore启动Mac OS X(Debug版，无Wifi)' --class macosx {
            default="${chosen}"
            save_env default        
            if test x"${boot_minilinux}" = xy ; then
                set pre_is_nimilinux=y
                save_env pre_is_nimilinux
                linux /EFI/BootMenu/Bluetooth/ibtinit
            else
                set pre_is_nimilinux=n
                save_env pre_is_nimilinux
               chainloader /EFI/OC/OpenCore_Debug.efi
            fi
        }
    fi

    if test -f "($root)/EFI/BootMenu/Bluetooth/ibtinit"  ; then
        menuentry '加载蓝牙固件' {
            linux /EFI/BootMenu/Bluetooth/ibtinit
        }
    fi

    #这个是搜索用的，建议自己修改一下用下面的一个配置，就不用每次启动搜索硬盘
    search --no-floppy --file --set=WINPE  /WinPE/boot.wim
    if test x"${WINPE}" != x ; then
        menuentry 'WINPE' {
            insmod wimboot
	    	root=($WINPE)
            wimboot @:boot.wim:/WinPE/boot.wim @:bootmgfw.efi:/WinPE/bootmgfw.efi @:bcd:/WinPE/bcd @:boot.sdi:/WinPE/boot.sdi
        }
    fi

#    menuentry 'WINPE' {
#        insmod wimboot
#        #### winboot启动winpe方法，在硬盘某分区（可以是NTFS分区）根目录下新建目录\WinPE（注意区分大小写），将BOOT.wim, bootmgfw.efi, bcd, boot.sdi 拷贝到该目录下。
#        #### 加入不知道这几个文件是怎么来的，老老实实用别人提供的就好了。
#        #### 修改下面一行的中硬盘分区的UUID 即22A69EC5512B9F66为自己分区的UUID
#        #### UUID 查看方式: 在启动菜单的系统选择界面，按 "C"键， 进入命令行模式，输入 "ls -l". 在输出信息中找到winpe所在分区的卷标 Lable，
#        #### 卷标后面就是UUID XXXXXXXXXX，这就是该分区的UUID
#        #### WINPE目录是可以修改的，如果要修改目录，请把winboot开头一行的目录即/WINPE改成自己实际存放的目录即可（建议为英文目录，并注意区分大小写）
#        search --no-floppy --fs-uuid --set=root  22A69EC5512B9F66
#        wimboot @:boot.wim:/WinPE/BOOT.wim @:bootmgfw.efi:/WinPE/bootmgfw.efi @:bcd:/WinPE/bcd @:boot.sdi:/WinPE/boot.sdi
#    }

#    menuentry "Ubuntu 20.04 LiveCD" --class ubuntu --class gnu-linux {
#        #### 启动linux光盘ISO镜像方法
#        #### 1、 在硬盘某分区（可以是NTFS分区）根目录下新建目录比如，”Ubuntu“或“DDDDDDDD”，将iso文件拷贝到该目录下
#        #### 2、修改下面一行的中硬盘分区的UUID 即22A69EC5512B9F66为自己分区的UUID
#        ####    UUID 查看方式: 在启动菜单的系统选择界面，按 "C"键， 进入命令行模式，输入 "ls -l". 在输出信息中找到winpe所在分区的卷标即Lable，
#        ####   卷标后面就是UUID XXXXXXXXXX，这就是该分区的UUID
#        ####  修改下面两行中/Ubuntu/ubuntu-20.04-desktop-amd64.iso，经Ubuntu改成自己定义的目录”Ubuntu“或“DDDDDDDD”，ubuntu-20.04-desktop-amd64.iso修改为自己光盘镜像iso文件名称
#        ####  一下代码仅代表unbutu可用，其他系统是否需要其他配置不清楚。
#        search --no-floppy --fs-uuid --set=root  22A69EC5512B9F66
#        loopback loop /Ubuntu/ubuntu-20.04-desktop-amd64.iso
#        linux (loop)/casper/vmlinuz boot=casper iso-scan/filename=/Ubuntu/ubuntu-20.04-desktop-amd64.iso   file=(loop)/cdrom/preseed/ubuntu.seed noprompt noeject quiet splash acpi_rev_override=1 nouveau.modeset=0
#        initrd (loop)/casper/initrd
#    }
}
menuentry "重新启动计算机" --class restart {
    reboot;
}

menuentry "关闭计算机" --class shutdown {
    halt
}


